spring:
    application:
        name: spring-boot-oauth2-server
    mvc:
        favicon:
            enabled: false
        throw-exception-if-no-handler-found: true
    main:
        banner-mode: 'off'
    datasource:
        driverClassName: org.postgresql.Driver
        url: jdbc:postgresql://localhost:5432/oauth
        username: localuser
        password: localuserpassword
    jpa:
        hibernate:
            naming-strategy: org.hibernate.cfg.DefaultNamingStrategy
            ddl-auto: validate
        properties:
            hibernate:
                temp:
                    use_jdbc_metadata_defaults: false
        database-platform: org.hibernate.dialect.PostgreSQLDialect
security:
    oauth2:
        resource:
            filter-order: 3
        client:
            authenticationScheme: header
logging:
    level:
    # org.springframework.security: DEBUG

server:
    port: 8080
    error:
        whitelabel:
            enabled: false

oauth2:
    paths:
        token: /v1/oauth2/token
        check_token: /v1/oauth2/check_token
        token_key: /v1/oauth2/token_key
        authorize: /v1/oauth2/authorize
        confirm_access: /v1/oauth2/confirm_access